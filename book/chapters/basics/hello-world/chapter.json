{
    "title": "hello world",
    "sections": [
        {
            "file": "console",
            "lang": "console",
            "explanations": [
                {
                    "line": 1,
                    "text": "To \"nixify\" a project, it only needs a `flake.nix` file at its root. To create one, you can use the `nix flake new` command."
                },
                {
                    "line": 6,
                    "text": "To build a ni  project, you can then use `nix build` which will find the `flake.nix` at the root of the project and build it. Unfortunately, by default mac is not supported."
                },
                {
                    "line": 9,
                    "text": "You can also launch a shell that will act as a development environment by running `nix develop`. Unfortunately, this won't work on mac by default as well."
                },
                {
                    "line": 13,
                    "text": "If you are on mac, modify the flake file and replace `linux` with `darwin` and run `nix build` again. You should see two new files: a lock file and a result file symlinking to the built artifacts."
                },
                {
                    "line": 21,
                    "text": "In the folder symlinked by the `result` file you can find binaries and outputs produced by the build of the `hello` package."
                },
                {
                    "line": 24,
                    "text": "Thix `nix flake show` command shows you what is encoded by the `flake.nix` file."
                }
            ]
        },
        {
            "file": "flake.nix",
            "lang": "nix",
            "explanations": [
                {
                    "line": 1,
                    "text": "A .nix file is written using the nix language (more on that later)."
                },
                {
                    "line": 6,
                    "text": "We obtain the `hello` package from [nixpkgs](https://github.com/NixOS/nixpkgs), the place for all softwares that were packaged with nix. What is `packages`? Why are we using `legacyPackages`? No idea."
                },
                {
                    "line": 8,
                    "text": "the `defaultPackage` points to what `nix` builds. Don't worry too much about the content of our `flake.nix` for now, you'll have to learn a bit more about the nix language before we go back to that."
                }
            ]
        },
        {
            "file": "flake.lock",
            "lang": "nix",
            "explanations": [
                {
                    "line": 1,
                    "text": "The `flake.lock` file is created when you build for the first time. It is then used to track the hash of each dependencies you listed, so that they do not change under you in the future."
                }
            ]
        }
    ]
}